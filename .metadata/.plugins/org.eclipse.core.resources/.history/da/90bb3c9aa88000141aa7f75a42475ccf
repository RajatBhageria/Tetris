/**
 * CIS 120 HW10
 * (c) University of Pennsylvania
 * @version 2.0, Mar 2013
 */

// imports necessary libraries for Java swing
import java.awt.*;
import java.awt.event.*;

import javax.swing.*;


public class Game extends JFrame {

    JLabel statusbar;


    public Game() {

        statusbar = new JLabel("Score: 0");
        add(statusbar, BorderLayout.SOUTH);
        final GameCourt board = new GameCourt(this);
        add(board);

        setSize(200, 450);
        setTitle("Tetris");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        
        JMenuBar menuBar = new JMenuBar();
        
        
        // Define and add two drop down menu to the menubar
        JMenu fileMenu = new JMenu("File");
        
        JMenuItem newAction = new JMenuItem("New Game");
        newAction.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                board.start();
            }
        });
        
        JMenuItem directionsAction = new JMenuItem("Directions");
        final String directions = "This is how to play Tetris by Rajat Bhageria\n"
        		+ "\n"
        		+ "To start a new game, go to 'File' and then press 'New Game'\n"
        		+ "The 'Left Arrow Key' pushes the current block left\n"
        		+ "The 'Right Arrow Key' pushes the current block right\n"
        		+ "The 'Up Arrow Key' rotates the current block right\n"
        		+ "The 'Down Arrow Key' rotates the current block left\n"
        		+ "To pause a game, you can go to 'File' press 'Pause/Play'\n"
        		+ "To start a paused game, press 'Pause/Play' again\n"
        		+ "You can also pause the game by pressing the 'p' key\n"
        		+ "The score for your current game is shown right below the Game\n"
        		+ "If you press 'Space Bar' the falling block will drop down completely\n"
        		+ "Pressing the 'd' key makes the current block fall down one line";
        directionsAction.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            JOptionPane.showMessageDialog(null, directions);
    		}
    	});
        
        JMenuItem pauseAction = new JMenuItem("Pause/Play");
        pauseAction.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
        	board.pause();
        	}
    	});
      
        fileMenu.add(newAction);
        fileMenu.add(directionsAction);
        fileMenu.add(pauseAction);
        
        menuBar.add(fileMenu);
        add(menuBar, BorderLayout.NORTH);

     
        this.setJMenuBar(menuBar);
   }

   public JLabel getStatusBar() {
       return statusbar;
   }

    public static void main(String[] args) {

        Game game = new Game();
        game.setLocationRelativeTo(null);
        game.setVisible(true);

    } 
    public class MenuExp extends JFrame {
        
        public MenuExp() {
            
            setTitle("Menu Example");
            setSize(150, 150);
            
            // Creates a menubar for a JFrame
            JMenuBar menuBar = new JMenuBar();
            
            // Add the menubar to the frame
            setJMenuBar(menuBar);
            
            // Define and add two drop down menu to the menubar
            JMenu fileMenu = new JMenu("File");
            JMenu editMenu = new JMenu("Edit");
            menuBar.add(fileMenu);
            menuBar.add(editMenu);
            
            // Create and add simple menu item to one of the drop down menu
            JMenuItem newAction = new JMenuItem("New");
            JMenuItem openAction = new JMenuItem("Open");
            JMenuItem exitAction = new JMenuItem("Exit");
            JMenuItem cutAction = new JMenuItem("Cut");
            JMenuItem copyAction = new JMenuItem("Copy");
            JMenuItem pasteAction = new JMenuItem("Paste");
            
            // Create and add CheckButton as a menu item to one of the drop down
            // menu
            JCheckBoxMenuItem checkAction = new JCheckBoxMenuItem("Check Action");
            // Create and add Radio Buttons as simple menu items to one of the drop
            // down menu
            JRadioButtonMenuItem radioAction1 = new JRadioButtonMenuItem(
                    "Radio Button1");
            JRadioButtonMenuItem radioAction2 = new JRadioButtonMenuItem(
                    "Radio Button2");
            // Create a ButtonGroup and add both radio Button to it. Only one radio
            // button in a ButtonGroup can be selected at a time.
            ButtonGroup bg = new ButtonGroup();
            bg.add(radioAction1);
            bg.add(radioAction2);
            fileMenu.add(newAction);
            fileMenu.add(openAction);
            fileMenu.add(checkAction);
            fileMenu.addSeparator();
            fileMenu.add(exitAction);
            editMenu.add(cutAction);
            editMenu.add(copyAction);
            editMenu.add(pasteAction);
            editMenu.addSeparator();
            editMenu.add(radioAction1);
            editMenu.add(radioAction2);
            // Add a listener to the New menu item. actionPerformed() method will
            // invoked, if user triggred this menu item
            newAction.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent arg0) {
                    System.out.println("You have clicked on the new action");
                }
            });
        }
}}

